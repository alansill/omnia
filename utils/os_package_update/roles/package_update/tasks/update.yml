# Copyright 2023 Dell Inc. or its subsidiaries. All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
---

- name: Execute create repo command
  ansible.builtin.command: createrepo "{{ package_dir }}"
  changed_when: true

- name: Modify osimage if pkg_type is other
  when: package_type == 'other'
  block:
    - name: Add package directory and list to xcat osimage object definition
      ansible.builtin.command: chdef -t osimage "{{ os_image }}" -p otherpkglist="{{ package_list }}"
      changed_when: true

    - name: Execute updatenode command
      ansible.builtin.command: updatenode "{{ nodelist }}" -P "otherpkgs"
      changed_when: true
      failed_when: false

    - name: Clean osimage object definition
      ansible.builtin.command: chdef -t osimage "{{ os_image }}" -m otherpkglist="{{ package_list }}"
      changed_when: true

  rescue:
    - name: Clean osimage object definition before failing
      ansible.builtin.command: chdef -t osimage "{{ os_image }}" -m otherpkglist="{{ package_list }}"
      changed_when: true

- name: Modify osimage if pkg_type is os
  when: package_type == 'os'
  block:
    - name: Add package directory and list to xcat osimage object definition
      ansible.builtin.command: chdef -t osimage "{{ os_image }}" -p pkglist="{{ package_list }}"
      changed_when: true

    - name: Execute updatenode command
      ansible.builtin.command: updatenode "{{ nodelist }}" -P "ospkgs --keeprepo"
      changed_when: true
      failed_when: false

    - name: Clean osimage object definition
      ansible.builtin.command: chdef -t osimage "{{ os_image }}" -m pkglist="{{ package_list }}"
      changed_when: true

  rescue:
    - name: Clean osimage object definition before failing
      ansible.builtin.command: chdef -t osimage "{{ os_image }}" -m pkglist="{{ package_list }}"
      changed_when: true

- name: Fetch update status successful nodes
  ansible.builtin.postgresql_query:
    db: xcatdb
    login_user: postgres
    query: select node,updatestatus,updatestatustime from nodelist where groups like '%all%';
  become_user: postgres
  register: update_status_nodes

- name: Update package status message
  ansible.builtin.debug:
    msg: "{{ update_node_status_msg }}"

- name: Update package status for all nodes
  ansible.builtin.debug:
    msg: "{{ update_status_nodes.query_result }}"
  when: update_status_nodes.query_result | length >= 1
